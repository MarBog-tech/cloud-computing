version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    hostname: marchuk-bohdan-io-41mn-sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "StrongPassword123!"
      MSSQL_PID: Express
    ports:
      - "1433:1433"
    restart: always
    networks:
      - app-network
  
  frontend:
    container_name: frontend
    hostname: marchuk-bohdan-io-41mn-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - sqlserver
      - backend1
    networks:
      - app-network    
  
  backend1:
    container_name: backend1
    hostname: marchuk-bohdan-io-41mn-backend1
    environment:
      server: "marchuk-bohdan-io-41mn-sqlserver"
      port: "1433"
      database: "Db"
      password: "StrongPassword123!"
      dbuser: "SA"
      ASPNETCORE_ENVIRONMENT: Development
    ports:
      - "8080:8080"
    build: ./backend/backend
    depends_on:
      - sqlserver
    networks:
      - app-network

  backend2:
    container_name: backend2
    hostname: marchuk-bohdan-io-41mn-backend2
    environment:
      server: "marchuk-bohdan-io-41mn-sqlserver"
      port: "1433"
      database: "Db"
      password: "StrongPassword123!"
      dbuser: "SA"
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: 8081
    ports:
      - "8081:8081"
    build: ./backend/backend
    depends_on:
      - sqlserver
      - backend1
    networks:
      - app-network

  nginx:
    image: nginx:latest
    hostname: marchuk-bohdan-io-41mn-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    restart: always
    depends_on:
      - backend1
      - backend2
      - frontend
    networks:
      - app-network
  
networks:
  app-network:
    driver: bridge